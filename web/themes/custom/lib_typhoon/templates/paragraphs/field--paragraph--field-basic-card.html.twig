{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

<div class="lib-basic-card--wrap lib-mt-2xl lib-mr-2xl lib-mb-2xl sm:lib-mr-0 xs:lib-mr-0">
  {% block paragraph %}
    {% for item in items %}

      {% set cardColor = item.content['#paragraph'].field_basic_card_color.value %}
      {% set cardTitle = item.content['#paragraph'].field_basic_card_title.value %}
      {% set cardText = item.content['#paragraph'].field_basic_card_text.value %}
      {% set cardLinkText = item.content['#paragraph'].field_basic_card_link.title %}
      {% set cardLink = item.content['#paragraph'].field_basic_card_link.0.url %}

      <a role="Link" href="{{ cardLink }}" class="lib-basic-card--link">
        <div {{attributes.addClass(classes, cardColor)}}>
          <span class="lib-aria-text">
            {{ cardTitle }}
            link
          </span>
          <div class="lib-basic-card--text-wrap">
            <h3 class="lib-basic-card--title">
              {{ cardTitle }}
            </h3>
            <p class="lib-basic-card--desc">
              {{ cardText}}
            </p>
            <div class="lib-cta--wrap">
              <div class="lib-cta">
                {{ cardLinkText }}
              </div>
            </div>
          </div>
        </div>
      </a>
    {% endfor %}
  {% endblock paragraph %}
</div>
