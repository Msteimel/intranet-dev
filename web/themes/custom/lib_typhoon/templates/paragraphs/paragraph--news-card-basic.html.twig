{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'lib-news-card--basic',
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

{% set cardCatergory = content.field_news_card_basic_category.0['#title'] %}
{% set cardTitle = content.field_news_card_basic_title|field_value %}
{% set cardText = content.field_news_card_basic_text|field_value %}
{% set cardLinkText = content.field_news_card_basic_link.0['#title'] %}
{% set cardLink = content.field_news_card_basic_link.0['#url'] %}
{% set cardImgSrc = file_url(paragraph.field_news_card_basic_image.entity.uri.value) %}
{% set cardImgAlt = content.field_news_card_basic_image.alt %}


{% block paragraph %}
  {% block content %}
    <div
      {{attributes.addClass(classes)}}>
      {# <span class="lib-aria-text">
                    Link to
                    {{ cardTitle }}
                  </span> #}
      <div class="lib-news-card--content">
        <div class="lib-news-card--image-wrap lib-mr-sm xs:lib-mb-md">
          <a href="{{cardLink}}">
            <figure class="lib-br4">
              <img src="{{ cardImgSrc }}" alt="{{cardImgAlt}}"/>
            </figure>
          </a>
        </div>
        <div class="lib-news-card--text">
          {% if cardCategory %}
            <span class="lib-news-card--category">
              {{ cardCatergory }}
            </span>
          {% endif %}
          <h3 title="{{cardTitle}}" class="lib-news-card--title lib-mt-2xs lib-mb-md lib-text-lg">
            <a href="{{cardLink}}">
              {{ cardTitle }}
            </a>
          </h3>
          <div class="lib-news-card--desc">
            <p class="lib-news-card--info lib-text-sm">
              {{ cardText}}
            </p>
            <div class="lib-cta--wrap">
              <a href="{{cardLink}}" class="lib-cta">
                Read More
                <span class="lib-aria-text">
                  About
                  {{cardTitle}}
                </span>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  {% endblock %}
{% endblock paragraph %}
