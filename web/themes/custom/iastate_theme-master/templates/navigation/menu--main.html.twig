{#
/**
 * @file
 * Default theme implementation to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 *
 * @ingroup themeable
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see http://twig.sensiolabs.org/doc/tags/macro.html
#}

{{ menus.menu_links(items, attributes, 0) }}

{% macro menu_links(items, attributes, menu_level) %}
  {% import _self as menus %}
  {% if items %}
    
    {% if menu_level == 0 %} {# If the menu has only one level. #}
      <ul{{ attributes.addClass('nav navbar-nav') }}>
    {% else %} {# If the menu has multiple levels. #}
      <ul class="isu-dropdown-menu">
    {% endif %}

    {% for item in items %}
      {# Assign classes based on if the item is an open parent, closed parent, 
      active, or a has a submenu. #}
      {%
        set classes = [ 
          menu_level ? 'dropdown-item isu-dropdown-item' : 'nav-item',
          item.is_expanded ? 'menu-item--expanded',
          item.is_collapsed ? 'menu-item--collapsed',
          item.in_active_trail ? 'active is-active',
          item.below ? 'isu-dropdown ',
        ]
      %}

      {% if item.below %} {# If the item has children, it will be a dropdown. #}
        <li{{ item.attributes.addClass(classes).setAttribute('aria-expanded', 'false') }}>
      {% else %} {# If the item does not have children, it will not be a dropdown. #}
        <li{{ item.attributes.addClass(classes) }}>
      {% endif %}
      
        {# Assign classes based on if the link is a parent or not, and if it is active or not #}
        {%
          set link_classes = [
            not menu_level ? 'nav-link isu-nav-link',
            item.in_active_trail ? 'active is-active',
          ]
        %}
        {# If the item is a parent, it acts as a toggle to open the menu. #}
        {% 
          set toggle_classes = [
           'nav-link', 
           'isu-nav-link', 
           'isu-dropdown-toggle'
          ]
        %}

        {% if item.below %} {# If the item has children, it is a toggle. #}
          <div class="isu-dropdown-toggle_wrapper">
            {{ link(item.title, item.url, {'class': toggle_classes}) }}
            <button class="isu-dropdown-toggle_mobile"><span class="fa fa-angle-down"></span><span class="sr-only">Open dropdown menu</span></button>
          </div>
          {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
        {% else %} {# If the item does not have children, it's just a normal link. #}
          {{ link(item.title, item.url, {'class': link_classes}) }}
        {% endif %}
        
      </li>
    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}